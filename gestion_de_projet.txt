## Organisation

### Trello

Afin de bien pourvoir répartir les tâches et de ne pas empiéter les uns sur les autres nous avons créer un Trello pour pouvoir suivre l'avancement du projet et savoir qui fait quoi.

### Github

Nous avons également créer un repo Github pour pouvoir travailler en équipe sur le projet, nous avons choisit Github car c'est une plateforme qui nous est plus familière que GitLab ce qui à permit par la suite l'implitation de workflows (ou Github actions).

Nous n'avons pas utilisé de flow comme [Gitflow](https://www.atlassian.com/fr/git/tutorials/comparing-workflows/gitflow-workflow) car nous avons jugé que ce n'était pas nécéssaire pour un projet de cette taille et en particulier car le projet est un site web où tout est assez séparé pour ne pas avoir à se géner entre nous.

> A noter que certaines branches existe sur le repo mais sont liés à une utilisation solitaire de celles ci et ne sont pas vraiment liés au projet en lui même.

### Figma

Nous avons utilisé Figma pour pouvoir créer une maquette du site et avoir une idée de ce que nous voulions faire.
Cette étape nous as aussi aider à définir des primitives en avances pour nos fichiers globals de CSS.

## Répartition des tâches

### Début du projet

#### Hilan

- Mise en place de Github et des workflows
- Création de la base de données sur Supabase
- Mise en place de la solution d'hébergement (Vercel)
- Extraction des données de notre [dataset](https://www.kaggle.com/datasets/tmdb/tmdb-movie-metadata) et insertion dans la base de données
- Création des défauts (linting, formatage)

#### Louis

- Mise en place de Figma et implantation du design global
- Création du layout global du site (barre de navigation, footer, couleur, police, etc...)
- Création de la page d'accueil avec présentation


#### Nicolas



### Milieu du projet

#### Hilan

- Système d'authentification lié à Supabase (connexion, inscription, déconnexion) et fetch cohérent avec les autorisations de l'utilisateur connecté.
- Création d'un middleware nécéssaire pour se protéger des attaques communes (CSRF, XSS, etc...).
- Documentation sous forme de page d'example (voir les routes `/example`, `/example/server` et `/example/client`).

#### Louis

- Implémentation du design des pages de connexion et d'inscription.
- Incorporation des listes de films par catégorie: les plus populaires, les mieux votés, les plus récents et les meilleurs films par genre (ici film d'animation).
- Création de la page "about us" non terminée
- Amélioration du design de la page d'accueil: ajout d'images, de boutons "espace client" et "nous rejoindre". 

#### Nicolas



### Fin du projet

#### Hilan

- Création d'un système d'avatar pour les utilisateurs (upload d'image, affichage de l'image) avec des vérification sur la taille et le typeContent (image/png, file/pdf, etc...) pour protéger le site.
- Barre de navigation consciente de l'état de connexion de l'utilisateur.

#### Louis

- Création de DESIGN.pdf, INSTALL.md
- Ajout d'un bouton de deconnexion sur la barre de navigation, en lien avec l'état de connexion de l'utilisateur
- Gestion de l'état de connexion de l'utilisateur sur les boutons "espace client" et "nous rejoindre". 
- Fixation des problèmes globals de css, et gestion mineur du responsive. 
- Finalisation de la page "about us"


#### Nicolas